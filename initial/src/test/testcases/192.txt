function fibonacciLoop(a:integer):integer;
                        var i,gt,lt:integer;
                        begin
                            gt:=lt:=1;
                            i:=0;
                            while i<a do
                            begin
                                gt:=gt+1;
                                lt := gt;
                                
                                i:=i+1;
                            end
                            return gt;
                        end
                    function fibonacciRecursive(a:integer):integer;
                        begin
                            if (a=1 or a=2) then 
                                return 1;
                            return fibonacciRecursive(a-1) + fibonacciRecursive(a-2);
                        end
                    function fibonacciTailRecursive(a:integer;gt:integer;lt:integer):integer;
                        begin
                            if a=1 then 
                                return gt;
                            return fibonacciTailRecursive(a-1,gt+lt,gt);
                        end
                    
                    var a:integer;
                    
                    procedure main();
                    var fibonacciNumber:integer;
                    begin                       
                        writeln("Input a: ");
                        a := getInt();
                        
                        fibonacciNumber:= fibonacciLoop(a);
                        print(fibonacciNumber);
                        
                        fibonacciNumber := fibonacciRecursive(a);
                        print(fibonacciNumber);
            
                        fibonacciNumber := fibonacciTailRecursive(a, 1, 1);
                        print(fibonacciNumber);
                    end
                    